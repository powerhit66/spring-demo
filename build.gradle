plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// spring security
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    // Oauth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.security:spring-security-oauth2-jose'
	// JSP
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api'
	implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl'
	// JPA(SQL書かなくてもDBにアクセスできるライブラリ)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// lombok (getter, setter自動生成)
	implementation 'org.projectlombok:lombok'
	// Scraping (スクレイピング用)
	implementation 'org.jsoup:jsoup:1.10.2'
	// AOP (Aspect oriented programming用)
	implementation 'org.springframework:spring-aop'
	// 再起動しなくてもアプリを更新する機能（開発フェーズ用）
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	// PostgreSQL用
	runtimeOnly 'org.postgresql:postgresql'
	// テスト用
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
